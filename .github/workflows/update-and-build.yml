name: "Update and build"
on:
  schedule:
    - cron: '0 */2 * * *'
  workflow_dispatch:

jobs:
  update:
    name: Update sources
    strategy:
      matrix:
        cachixName:
          - reedrw
    runs-on: ubuntu-latest
    steps:
    - name: Cancel Previous Runs
      uses: technote-space/auto-cancel-redundant-workflow@v1.6.3

    - name: Install nix
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Checkout repository
      uses: actions/checkout@v2.3.4

    - name: Update sources
      run: ./update-all.sh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create diff
      run: |
        mkdir -p ~/artifact
        git diff --oneline --graph | tee ~/artifact/update.diff | nix run nixpkgs.python38Packages.pygments -c pygmentize

    - name: Upload diff artifact
      uses: actions/upload-artifact@v2
      with:
        name: update.diff
        path: ~/artifact/update.diff

  system:
    name: Build system
    needs: update
    strategy:
      matrix:
        cachixName:
          - reedrw
        machines:
          - nixos-desktop
          - nixos-t400
          - nixos-t520

    runs-on: ubuntu-latest
    steps:
    - name: Install nix
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Setup cachix
      uses: cachix/cachix-action@v7
      with:
        name: ${{ matrix.cachixName }}
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

    - name: Checkout repository
      uses: actions/checkout@v2.3.4

    - name: Download diff artifact
      uses: actions/download-artifact@v2
      with:
        name: update.diff
        path: ~/artifact/update.diff

    - name: Apply diff
      run: |
        git apply ~/artifact/update.diff/update.diff

    - name: Build system
      run: nix run nixpkgs.nix-build-uncached -c nix-build-uncached -I nixos-hardware="$(jq -r '.["nixos-hardware"].url' ./nix/sources.json)" -I nur="$(jq -r '.["NUR"].url' ./nix/sources.json)" ci.nix -A $machine
      env:
        machine: ${{ matrix.machines }}

  home-manager:
    name: Build home-manager
    needs: update
    strategy:
      matrix:
        cachixName:
          - reedrw
    runs-on: ubuntu-latest
    steps:
    - name: Install nix
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Setup cachix
      uses: cachix/cachix-action@v7
      with:
        name: ${{ matrix.cachixName }}
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

    - name: Checkout repository
      uses: actions/checkout@v2.3.4

    - name: Download diff artifact
      uses: actions/download-artifact@v2
      with:
        name: update.diff
        path: ~/artifact/update.diff

    - name: Apply diff
      run: |
        git apply ~/artifact/update.diff/update.diff

    - name: Build home-manager
      run: nix run nixpkgs.nix-build-uncached -c nix-build-uncached ci.nix -A home-manager

  shell:
    name: Build nix-shell
    needs: update
    strategy:
      matrix:
        cachixName:
          - reedrw
    runs-on: ubuntu-latest
    steps:
    - name: Install nix
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Setup cachix
      uses: cachix/cachix-action@v7
      with:
        name: ${{ matrix.cachixName }}
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

    - name: Checkout repository
      uses: actions/checkout@v2.3.4

    - name: Download diff artifact
      uses: actions/download-artifact@v2
      with:
        name: update.diff
        path: ~/artifact/update.diff

    - name: Apply diff
      run: |
        git apply ~/artifact/update.diff/update.diff

    - name: Build nix-shell
      run: nix run nixpkgs.nix-build-uncached -c nix-build-uncached -I nixpkgs="$(jq -r '.["nixpkgs-unstable"].url' ./nix/sources.json)" shell.nix

  nix-index:
    name: Update nix-index database
    needs: update
    runs-on: ubuntu-latest
    steps:
    - name: Install nix
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Checkout repository
      uses: actions/checkout@v2.3.4

    - name: Download diff artifact
      uses: actions/download-artifact@v2
      with:
        name: update.diff
        path: ~/artifact/update.diff

    - name: Apply diff
      run: |
        git apply ~/artifact/update.diff/update.diff

    - name: Update nix-index database
      run: |
        mkdir -p ~/artifact/nix-index
        nix-shell -p nix-index --run "nix-index -f $(jq -r '.["nixpkgs-unstable"].url' ./nix/sources.json) -d ~/artifact/nix-index"

    - name: Upload nix-index artifact
      uses: actions/upload-artifact@v2
      with:
        name: nix-index db
        path: ~/artifact/nix-index/files

  push:
    name: Commit and push
    needs: [update, nix-index, shell, system, home-manager]
    runs-on: ubuntu-latest
    steps:
    - name: Install nix
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Checkout repository
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0

    - name: Download diff artifact
      uses: actions/download-artifact@v2
      with:
        name: update.diff
        path: ~/artifact/update.diff

    - name: Apply diff
      run: |
        git apply ~/artifact/update.diff/update.diff

    - name: Download nix-index artifact
      uses: actions/download-artifact@v2
      with:
        name: nix-index db
        path: ~/artifact/nix-index/files

    - name: Replace nix-index db
      run: |
        rm -v ./modules/comma/files
        cp -v ~/artifact/nix-index/files/files ./modules/comma

    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "automated update" -a

    - name: Remove large blobs from history
      run: |
        nix run nixpkgs.bfg-repo-cleaner -c bfg -b 20M
        git reflog expire --expire=now --all
        git gc --prune=now --aggressive

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        force: true

  telegram:
    name: Telegram
    needs: push
    runs-on: ubuntu-latest
    if: always()
    steps:

    - name: Download diff artifact
      uses: actions/download-artifact@v2
      with:
        name: update.diff
        path: ~/artifact/update.diff

    - name: Check if anything was updated
      run: "[ -s ~/artifact/update.diff/update.diff ]"

    - name: Get workflow conclusion
      uses: technote-space/workflow-conclusion-action@v2.0.1

    - name: Send notification
      uses: yanzay/notify-telegram@v0.1.0
      with:
        chat: ${{ secrets.NOTIFICATION_CHAT_ID }}
        token: ${{ secrets.NOTIFICATION_TOKEN }}
        status: ${{ env.WORKFLOW_CONCLUSION }}
      if: env.WORKFLOW_CONCLUSION != 'success'
