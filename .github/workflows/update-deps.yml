name: "Update Nix dependencies"
on:
  schedule:
    - cron: '0 */2 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - name: Install Doppler CLI
      uses: dopplerhq/cli-action@v1

    - name: Pass all secrets to next steps
      run: |
        while read -rd $'' line; do echo "$line" >> $GITHUB_ENV; done < <( doppler secrets download --no-file --format=json | jq "." | grep -v 'DOPPLER_\(CONFIG\|ENVIRONMENT\|PROJECT\)' | jq -r 'to_entries|map("\(.key)<<EOF\n\(.value)\nEOF\u0000")[]' )
        while read -r line; do echo "::add-mask::$line"; done < <( doppler secrets download --no-file --format=json | jq "." | grep -v 'DOPPLER_\(CONFIG\|ENVIRONMENT\|PROJECT\)' | jq -r 'to_entries|map("\(.value)\u0000")[]' )
      env:
        DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}

    - uses: tibdex/github-app-token@v1.5
      id: generate-token
      with:
        app_id: ${{ env.APP_ID }}
        private_key: ${{ env.APP_PRIVATE_KEY }}

    - name: Install Nix
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Checkout repository
      uses: actions/checkout@v2.4.0

    - name: Run all "update-sources.sh"
      run: find -L "$(pwd)/" -type f -name "update-sources.sh" | while read -r updatescript; do ( dir="$(dirname -- "$updatescript")"; cd "$dir" || exit; $updatescript ); done

    - name: Create pull request
      uses: peter-evans/create-pull-request@v3.11.0
      with:
        token: ${{ steps.generate-token.outputs.token }}
        author: reedbot[bot] <74506764+reedbot[bot]@users.noreply.github.com>
        commit-message: Update Nix dependencies
        title: Update Nix dependencies
        body: |
          - Nix dependency updates

          Auto-generated by [create-pull-request][1]

          [1]: https://github.com/peter-evans/create-pull-request
        branch: update-dependencies
