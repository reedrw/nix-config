name: "SSH Debug"
on:
  workflow_dispatch:
    inputs:
      method:
        description: 'Use ngrok or tmate?'
        required: true
        default: 'ngrok'
      ref:
        description: 'Choose branch or commit to checkout.'
        required: true
        default: 'main'
jobs:
  tmate:
    if: github.event.inputs.method == 'tmate'
    name: Start connection via tmate
    strategy:
      matrix:
        cachixName:
          - reedrw

    runs-on: ubuntu-latest
    steps:
    - name: Cleanup Disk
      run: sudo rm -rf /usr/local/lib/android

    - name: Install Doppler CLI
      uses: dopplerhq/cli-action@v3

    - name: Pass all secrets to next steps
      run: |
        while read -rd $'' line; do echo "$line" >> $GITHUB_ENV; done < <( doppler secrets download --no-file --format=json | jq "." | grep -v 'DOPPLER_\(CONFIG\|ENVIRONMENT\|PROJECT\)' | jq -r 'to_entries|map("\(.key)<<EOF\n\(.value)\nEOF\u0000")[]' )
        while read -r line; do echo "::add-mask::$line"; done < <( doppler secrets download --no-file --format=json | jq "." | grep -v 'DOPPLER_\(CONFIG\|ENVIRONMENT\|PROJECT\)' | jq -r 'to_entries|map("\(.value)\u0000")[]' )
      env:
        DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.inputs.ref }}

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@v14
      with:
        source-url: "https://install.lix.systems/lix/lix-installer-x86_64-linux"
        logger: pretty

    - name: Install Cachix
      uses: cachix/cachix-action@v15
      with:
        name: ${{ matrix.cachixName }}
        signingKey: '${{ env.CACHIX_SIGNING_KEY }}'
        pushFilter: '(-source$|-src$|\.tar\.gz$|\.xpi$)'

    - name: Start SSH via tmate
      uses: P3TERX/ssh2actions@v1.0.0
      env:
        TELEGRAM_BOT_TOKEN: ${{ env.NOTIFICATION_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ env.NOTIFICATION_CHAT_ID }}

  ngrok:
    if: github.event.inputs.method != 'tmate'
    name: Start connection via ngrok
    strategy:
      matrix:
        cachixName:
          - reedrw

    runs-on: ubuntu-latest
    steps:
    - name: Cleanup Disk
      run: sudo rm -rf /usr/local/lib/android

    - name: Install Doppler CLI
      uses: dopplerhq/cli-action@v3

    - name: Pass all secrets to next steps
      run: |
        while read -rd $'' line; do echo "$line" >> $GITHUB_ENV; done < <( doppler secrets download --no-file --format=json | jq "." | grep -v 'DOPPLER_\(CONFIG\|ENVIRONMENT\|PROJECT\)' | jq -r 'to_entries|map("\(.key)<<EOF\n\(.value)\nEOF\u0000")[]' )
        while read -r line; do echo "::add-mask::$line"; done < <( doppler secrets download --no-file --format=json | jq "." | grep -v 'DOPPLER_\(CONFIG\|ENVIRONMENT\|PROJECT\)' | jq -r 'to_entries|map("\(.value)\u0000")[]' )
      env:
        DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref }}

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@v14
      with:
        source-url: "https://install.lix.systems/lix/lix-installer-x86_64-linux"
        logger: pretty

    - name: Install Cachix
      uses: cachix/cachix-action@v15
      with:
        name: ${{ matrix.cachixName }}
        signingKey: '${{ env.CACHIX_SIGNING_KEY }}'
        pushFilter: '(-source$|-src$|\.tar\.gz$|\.xpi$)'

    - name: Start SSH via ngrok
      uses: P3TERX/ssh2actions@v1.0.0
      with:
        mode: ngrok
      env:
        NGROK_REGION: us
        NGROK_TOKEN: ${{ env.NGROK_TOKEN }}
        SSH_PASSWORD: ${{ env.SSH_PASSWORD }}
        TELEGRAM_BOT_TOKEN: ${{ env.NOTIFICATION_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ env.NOTIFICATION_CHAT_ID }}

    - name: Send notification
      uses: yanzay/notify-telegram@v0.1.0
      with:
        chat: ${{ env.NOTIFICATION_CHAT_ID }}
        token: ${{ env.NOTIFICATION_TOKEN }}
        status: ${{ env.WORKFLOW_CONCLUSION }}
